version: "3.8"

# visite o canal GS Tech - https://www.youtube.com/@GS-Tech27

#command: bundle exec rails db:chatwoot_prepare

services:
  #serviço principal do front chatwoot
  chatwoot_app:
    image: chatwoot/chatwoot:latest
    # apos dar o primeiro stack aguarde a migracao dos bancos de dados desligue a stack
    # comente a proxima linha e descomente command: bundle exec rails db:chatwoot_prepare
    command: bundle exec rails db:chatwoot_prepare
    #command: bundle exec rails s -p 3000 -b 0.0.0.0
    entrypoint: docker/entrypoints/rails.sh
    volumes:
      - chatwoot_data:/app/storage
    networks:
      - npm_public
      - app_network
    environment:
      INSTALLATION_NAME: nome da instalaçao
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
      SECRET_KEY_BASE: <SUA_KEY>
      FRONTEND_URL: https://chatwoot.seu_dominio.com.br
      DEFAULT_LOCALE: pt_BR
      FORCE_SSL: "true"
      ENABLE_ACCOUNT_SIGNUP: "false"
      REDIS_URL: redis://redis:6379
      # Banco de dados
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: <SENHA_POSTGRES>
      POSTGRES_DATABASE: chatwoot
      # Armazenamento
      ACTIVE_STORAGE_SERVICE: local
      # logs
      RAILS_LOG_TO_STDOUT: "true"
      # Avatar Bot
      USE_INBOX_AVATAR_FOR_BOT: "true"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  #worker
  chatwoot_worker:
    image: chatwoot/chatwoot:latest
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - chatwoot_data:/app/storage
    networks:
      - app_network
    environment:
      INSTALLATION_NAME: nome da instalaçao
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
      SECRET_KEY_BASE: <SUA_KEY>
      FRONTEND_URL: https://chatwoot.seu_dominio.com.br
      DEFAULT_LOCALE: pt_BR
      FORCE_SSL: "true"
      ENABLE_ACCOUNT_SIGNUP: "false"
      REDIS_URL: redis://redis:6379
      # Banco de dados
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: <SENHA_POSTGRES>
      POSTGRES_DATABASE: chatwoot
      # Armazenamento
      ACTIVE_STORAGE_SERVICE: local
      # logs
      RAILS_LOG_TO_STDOUT: "true"
      # Avatar Bot
      USE_INBOX_AVATAR_FOR_BOT: "true"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

volumes:
  chatwoot_data:
    external: true

networks:
  npm_public:
    external: true
  app_network:
    external: true